/* Generated By:JavaCC: Do not edit this line. aovgraphConstants.java */
package aov;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
@SuppressWarnings("all")
public interface aovgraphConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ASPECT_ORIENTED_MODEL = 5;
  /** RegularExpression Id. */
  int GOAL_MODEL = 6;
  /** RegularExpression Id. */
  int SOFTGOAL = 7;
  /** RegularExpression Id. */
  int GOAL = 8;
  /** RegularExpression Id. */
  int TASK = 9;
  /** RegularExpression Id. */
  int CORRELATION_REL = 10;
  /** RegularExpression Id. */
  int SOURCE = 11;
  /** RegularExpression Id. */
  int TARGET = 12;
  /** RegularExpression Id. */
  int GOAL_REF = 13;
  /** RegularExpression Id. */
  int SOFTGOAL_REF = 14;
  /** RegularExpression Id. */
  int TASK_REF = 15;
  /** RegularExpression Id. */
  int CROSSCUTTING_REL = 16;
  /** RegularExpression Id. */
  int POINTCUT = 17;
  /** RegularExpression Id. */
  int INCLUDE = 18;
  /** RegularExpression Id. */
  int SUBSTITUTE = 19;
  /** RegularExpression Id. */
  int ADVICE = 20;
  /** RegularExpression Id. */
  int INTERTYPE = 21;
  /** RegularExpression Id. */
  int ATTRIBUTE = 22;
  /** RegularExpression Id. */
  int ELEMENT = 23;
  /** RegularExpression Id. */
  int PROPERTY = 24;
  /** RegularExpression Id. */
  int AND = 25;
  /** RegularExpression Id. */
  int OR = 26;
  /** RegularExpression Id. */
  int INCOR = 27;
  /** RegularExpression Id. */
  int XOR = 28;
  /** RegularExpression Id. */
  int BREAK = 29;
  /** RegularExpression Id. */
  int HURT = 30;
  /** RegularExpression Id. */
  int UNKNOWN = 31;
  /** RegularExpression Id. */
  int HELP = 32;
  /** RegularExpression Id. */
  int MAKE = 33;
  /** RegularExpression Id. */
  int NOT = 34;
  /** RegularExpression Id. */
  int AFTER = 35;
  /** RegularExpression Id. */
  int BEFORE = 36;
  /** RegularExpression Id. */
  int AROUND = 37;
  /** RegularExpression Id. */
  int ALPHABETIC = 38;
  /** RegularExpression Id. */
  int NUMERO = 39;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 43;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 44;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 45;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"aspect_oriented_model\"",
    "\"goal_model\"",
    "\"softgoal\"",
    "\"goal\"",
    "\"task\"",
    "\"correlation\"",
    "\"source\"",
    "\"target\"",
    "\"goal_ref\"",
    "\"softgoal_ref\"",
    "\"task_ref\"",
    "\"crosscutting\"",
    "\"pointcut\"",
    "\"include\"",
    "\"substitute\"",
    "\"advice\"",
    "\"intertype declaration\"",
    "\"attribute\"",
    "\"element\"",
    "\"property\"",
    "\"and\"",
    "\"or\"",
    "\"inc-or\"",
    "\"xor\"",
    "\"break\"",
    "\"hurt\"",
    "\"unknown\"",
    "\"help\"",
    "\"make\"",
    "\"not\"",
    "\"after\"",
    "\"before\"",
    "\"around\"",
    "<ALPHABETIC>",
    "<NUMERO>",
    "\"//\"",
    "<token of kind 41>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 46>",
    "\"{\"",
    "\"}\"",
    "\";\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\",\"",
    "\"[\"",
    "\"]\"",
    "\":\"",
    "\"regular\"",
  };

}
